plugins {
    id 'org.springframework.boot' version "${springBootVersion}" apply false
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}" apply false
    id 'com.diffplug.spotless' version "${spotlessVersion}" apply false
    id "com.github.spotbugs" version "${spotbugsVersion}" apply false
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    java {
        registerFeature("optional") {
            usingSourceSet(sourceSets.main)
        }
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }
    compileJava {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-parameters'
    }
    compileTestJava {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-parameters'
    }
    test {
        useJUnitPlatform()
    }
    // dependency management
    apply plugin: 'io.spring.dependency-management'
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
    // spotless
    apply plugin: 'com.diffplug.spotless'
    spotless {
        encoding 'UTF-8'
        java {
            toggleOffOn()
            removeUnusedImports()
            trimTrailingWhitespace()
            endWithNewline()
            palantirJavaFormat()
        }
    }
    // spotbugs
    apply plugin: 'com.github.spotbugs'
    spotbugs {
        spotbugsTest.enabled = false
        // Code contains a hard coded reference to an absolute pathname, omit 'DumbMethodInvocations'
        // see com.freemanan.kubernetes.grey.common.util.GreyUtil
        omitVisitors.addAll 'FindReturnRef', 'MethodReturnCheck', 'DumbMethodInvocations'
    }
}
