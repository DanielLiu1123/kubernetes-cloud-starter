apply plugin: 'maven-publish'
apply plugin: 'signing'

version = System.getenv('RELEASE') ? version.substring(0, version.lastIndexOf('-SNAPSHOT')) : version

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
}

def githubUrl = 'https://github.com/DanielLiu1123/kubernetes-cloud-starter'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar

            pom {
                name = 'Kubernetes Cloud Starter'
                description = 'Kubernetes Cloud Starter'
                url = "${githubUrl}"
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://www.opensource.org/licenses/mit-license.php'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'Freeman'
                        name = 'Freeman Liu'
                        email = 'llw599502537@gmail.com'
                    }
                }
                scm {
                    connection = "scm:git:git://${githubUrl.substring(8)}.git"
                    developerConnection = "scm:git:ssh@${githubUrl.substring(8)}.git"
                    url = "${githubUrl}"
                }
            }

            // see https://stackoverflow.com/questions/61500897/gradle-springboot-mavenpublish-publication-only-contains-dependencies-and-or
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username System.getenv('OSSRH_USER')
                password System.getenv('OSSRH_PASSWORD')
            }
            if (version.endsWith('-SNAPSHOT')) {
                url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            } else {
                url 'https://s01.oss.sonatype.org/content/repositories/releases/'
            }
        }
    }

    tasks.withType(Sign) {
        onlyIf { !version.endsWith('-SNAPSHOT') }
    }

    signing {
        useGpgCmd()
        sign publishing.publications.mavenJava
    }
}
